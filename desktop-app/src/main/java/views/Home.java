package views;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import views.graphicUtils.Colors;
import views.graphicUtils.RoundedBorder;
import views.graphicUtils.Styler;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Locale;

public class Home {

    private JPanel footerPnl;
    private JPanel rootPnl;
    private JPanel navbarPnl;
    private JLabel logoLbl;
    private JPanel contentPnl;
    private JLabel footerLbl;
    private JPanel spotifyCardPnl;
    private JPanel youtubeCardPnl;
    private JLabel titleLbl;
    private JPanel titlePnl;

    public Home() {
        Styler.styleView(rootPnl, navbarPnl, titlePnl, contentPnl, footerPnl, logoLbl, titleLbl, footerLbl);

        JPanel[] cards = new JPanel[]{spotifyCardPnl, youtubeCardPnl};
        for (JPanel card : cards) {
            card.setBackground(Colors.cardBG);
            card.setBorder(new RoundedBorder(Colors.cardBorder, 12));

            card.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    ViewsManager.getInstance().changeView(card == spotifyCardPnl ? Views.SPOTIFY : Views.YOUTUBE);
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    card.setCursor(new Cursor(Cursor.HAND_CURSOR));
                    card.setBorder(new RoundedBorder(card == spotifyCardPnl ? Colors.spotify : Colors.youtube, 12));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    card.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    card.setBorder(new RoundedBorder(Colors.cardBorder, 12));
                }
            });
        }
    }

    public JPanel getRootPnl() {
        return rootPnl;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPnl = new JPanel();
        rootPnl.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        navbarPnl = new JPanel();
        navbarPnl.setLayout(new GridLayoutManager(1, 2, new Insets(10, 20, 10, 10), -1, -1));
        rootPnl.add(navbarPnl, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(-1, 100), new Dimension(-1, 120), new Dimension(-1, 140), 0, false));
        logoLbl = new JLabel();
        Font logoLblFont = this.$$$getFont$$$("Krungthep", Font.BOLD, 26, logoLbl.getFont());
        if (logoLblFont != null) logoLbl.setFont(logoLblFont);
        logoLbl.setHorizontalAlignment(10);
        logoLbl.setIcon(new ImageIcon(getClass().getResource("/logo.png")));
        logoLbl.setIconTextGap(10);
        logoLbl.setText("DOWNLOADIFY");
        navbarPnl.add(logoLbl, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        navbarPnl.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        contentPnl = new JPanel();
        contentPnl.setLayout(new GridLayoutManager(2, 5, new Insets(40, 30, 30, 30), -1, -1));
        rootPnl.add(contentPnl, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        spotifyCardPnl = new JPanel();
        spotifyCardPnl.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPnl.add(spotifyCardPnl, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(200, 100), new Dimension(200, 100), new Dimension(200, 100), 0, false));
        final JLabel label1 = new JLabel();
        label1.setIcon(new ImageIcon(getClass().getResource("/spotify_logo.png")));
        label1.setText("");
        spotifyCardPnl.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        youtubeCardPnl = new JPanel();
        youtubeCardPnl.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPnl.add(youtubeCardPnl, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(200, 100), new Dimension(200, 100), new Dimension(200, 100), 0, false));
        final JLabel label2 = new JLabel();
        label2.setIcon(new ImageIcon(getClass().getResource("/YT_logo.png")));
        label2.setText("");
        youtubeCardPnl.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPnl.add(spacer2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(80, -1), new Dimension(80, -1), new Dimension(80, -1), 0, false));
        final Spacer spacer3 = new Spacer();
        contentPnl.add(spacer3, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        contentPnl.add(spacer4, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        contentPnl.add(spacer5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        contentPnl.add(spacer6, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        footerPnl = new JPanel();
        footerPnl.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
        footerPnl.setEnabled(false);
        rootPnl.add(footerPnl, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 40), new Dimension(-1, 40), new Dimension(-1, 40), 0, false));
        footerLbl = new JLabel();
        Font footerLblFont = this.$$$getFont$$$("Roboto Light", -1, 13, footerLbl.getFont());
        if (footerLblFont != null) footerLbl.setFont(footerLblFont);
        footerLbl.setHorizontalAlignment(0);
        footerLbl.setHorizontalTextPosition(0);
        footerLbl.setText("GitHub");
        footerPnl.add(footerLbl, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        titlePnl = new JPanel();
        titlePnl.setLayout(new GridLayoutManager(1, 1, new Insets(50, 0, 0, 0), -1, -1));
        rootPnl.add(titlePnl, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        titleLbl = new JLabel();
        Font titleLblFont = this.$$$getFont$$$("Avenir", -1, 28, titleLbl.getFont());
        if (titleLblFont != null) titleLbl.setFont(titleLblFont);
        titleLbl.setText("Select a platform first");
        titlePnl.add(titleLbl, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPnl;
    }

}
